
services:
  # Main application
  social-network-api:
    build: .
    container_name: social-network-pathfinding
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - HOST=0.0.0.0
      - PORT=5000
      - REDIS_URL=redis://redis:6379/0
      - MONGODB_URL=mongodb://mongo:27017/social_network
    depends_on:
      - redis
      - mongo
    restart: unless-stopped
    networks:
      - social-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: social-network-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - social-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB for persistent graph storage
  mongo:
    image: mongo:7.0
    container_name: social-network-mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: social_network
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    networks:
      - social-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/social_network --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx load balancer (for multiple app instances)
  nginx:
    image: nginx:alpine
    container_name: social-network-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - social-network-api
    restart: unless-stopped
    networks:
      - social-network

  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: social-network-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - social-network

  # Grafana dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: social-network-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - social-network

volumes:
  redis_data:
  mongo_data:
  prometheus_data:
  grafana_data:

networks:
  social-network:
    driver: bridge
